---
- name: assignment 2 of ansible
  hosts: servers
  become: true
  serial: 1
  vars:
    file_paths:
      - /home/ubuntu/a.html
      - /home/ubuntu/b.html

  tasks:
    - name: install nginx
      apt:
        name: nginx
        state: present
        update_cache: yes

    - name: change the log
      copy:
        dest: /etc/logrotate.d/nginx
        content: |
          /var/log/nginx/*.log {
              daily
              missingok
              size 1G
              rotate 14
              compress
              delaycompress
              notifempty
              create 0640 www-data adm
              sharedscripts
              prerotate
                  if [ -d /etc/logrotate.d/httpd-prerotate ]; then \
                      run-parts /etc/logrotate.d/httpd-prerotate; \
                  fi \
              endscript
              postrotate
                  invoke-rc.d nginx rotate >/dev/null 2>&1
              endscript
          }

- name: part B of ansible assignment 2
  hosts: server1
  become: true
  serial: 1
  vars:
    file_paths:
      - /home/ubuntu/a.html
      - /home/ubuntu/b.html

  tasks:
    - name: create a file
      file:
        path: "{{ item }}"
        state: touch
        owner: root
        group: root
        mode: 770
      loop: "{{ file_paths }}"

    - name: paste the content first file
      copy:
        content: |
          <!DOCTYPE html>
          <meta http-equiv="refresh" content="60">
          <html>
          <head>
          <title>Welcome to nginx!</title>
          <style>
          html { color-scheme: light dark; }
          body { width: 35em; margin: 0 auto;
          font-family: Tahoma, Verdana, Arial, sans-serif; }
          </style>
          </head>
          <body>
          <h1>Content of Depanshu website</h1>
          <p><em>Thank you for using nginx.</em></p>
          </body>
          </html>
        dest: /home/ubuntu/a.html

    - name: paste the content second file
      copy:
        content: |
          <!DOCTYPE html>
          <meta http-equiv="refresh" content="60">
          <html>
          <head>
          <title>Welcome to nginx!</title>
          <style>
          html { color-scheme: light dark; }
          body { width: 35em; margin: 0 auto;
          font-family: Tahoma, Verdana, Arial, sans-serif; }
          </style>
          </head>
          <body>
          <h1>Content of Aman website</h1>
          <p><em>Thank you for using nginx.</em></p>
          </body>
          </html>
        dest: /home/ubuntu/b.html

    - name: user cron job
      cron:
        name: switch the content every min
        minute: "*/1"
        hour: "*"
        day: "*"
        month: "*"
        weekday: "*"
        user: root
        job: "cp /home/ubuntu/a.html /var/www/html/index.html"

    - name: user cron job
      cron:
        name: switch the content every 2 min
        minute: "1-59/2"
        hour: "*"
        day: "*"
        month: "*"
        weekday: "*"
        user: root
        job: "cp /home/ubuntu/b.html /var/www/html/index.html"

    - name: configure nginx site
      copy:
        dest: /etc/nginx/sites-available/default
        content: |
          server {
              listen 80;
              root /var/www/html;
              server_name ninja.opstree.com;

              location / {
                  index index.html;
              }
          }

    - name: reload nginx
      service:
        name: nginx
        state: reloaded

    - name: update /etc/hosts file
      lineinfile:
        path: /etc/hosts
        line: 54.206.247.4 ninja.opstree.com   ##public ip of server like (server1) 
        insertbefore: BOF
        state: present

- name: part C of assignment 2
  hosts: server2
  become: true
  tasks:
    - name: install apache server
      apt:
        name: apache2
        update_cache: yes
        state: latest

    - name: configure apache to listen on port 8081
      lineinfile:
        dest: /etc/apache2/ports.conf
        regexp: "^Listen 80"
        line: "Listen 8081"

    - name: configure apache virtual host to listen on port 8081
      lineinfile:
        dest: /etc/apache2/sites-available/000-default.conf
        regexp: "^<VirtualHost *:80>"
        line: "<VirtualHost *:8081>"

    - name: restart apache2
      service:
        name: apache2
        state: restarted

    - name: Configure Nginx as reverse proxy
      copy:
        content: |
          server {
              listen 80;
              server_name _;

              location / {
                  proxy_pass http://54.206.247.4:8081;   #public ip of server like (server2) 
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
        dest: /etc/nginx/sites-available/default
        owner: root
        group: root
        mode: 0644

    - name: restart nginx
      service:
        name: nginx
        state: restarted      
...
